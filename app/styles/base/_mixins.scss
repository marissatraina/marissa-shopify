/*------------------------------------*\
    #MIXINS
\*------------------------------------*/

// Breakpoints
$small: 320px;
$medium: 768px;
$large: 1024px;
$x-large: 1280px;
$max: 1440px;

@mixin breakpoint($point) {

  // for large desktop layouts
  @if $point==max {
    @media (min-width: $max + 1) {
      @content;
    }
  }

  // for desktop layouts
  @if $point==desktop {
    @media (min-width: $x-large) {
      @content;
    }
  }

  // for small desktop / large tablet layouts
  @if $point==tabletLarge {
    @media (min-width: $large) {
      @content;
    }
  }

  // tablet
  @if $point==tablet {
    @media (min-width: $medium) {
      @content;
    }
  }

  // layouts < 768px
  @if $point==mobileOnly {
    @media (max-width: $medium - 1) {
      @content;
    }
  }
}

@mixin break-max($point) {

  // for large desktop layouts
  @if $point==max {
    @media (max-width: $max - 1) {
      @content;
    }
  }

  // for desktop layouts
  @if $point==desktop {
    @media (max-width: $x-large) {
      @content;
    }
  }

  // for small desktop / large tablet layouts
  @if $point==tabletLarge {
    @media (max-width: $large) {
      @content;
    }
  }

  // tablet
  @if $point==tablet {
    @media (max-width: $medium) {
      @content;
    }
  }

  // layouts < 768px
  @if $point==mobile {
    @media (max-width: $medium - 1) {
      @content;
    }
  }

  @if $point==mobilesm {
    @media (max-width: $small + 55) {
      @content;
    }
  }
}

/** 
  * Usage @include flex()
*/
@mixin flex() {
  display: -webkit-box;
  /* OLD - iOS 6-, Safari 3.1-6, BB7 */
  display: -ms-flexbox;
  /* TWEENER - IE 10 */
  display: -webkit-flex;
  /* NEW - Safari 6.1+. iOS 7.1+, BB10 */
  display: flex;
}

@mixin cssGrid() {
  // display: -webkit-box;  /* OLD - iOS 6-, Safari 3.1-6, BB7 */
  display: -ms-grid;
  /* TWEENER - IE 10 */
  display: -webkit-grid;
  /* NEW - Safari 6.1+. iOS 7.1+, BB10 */
  display: grid;
}

/** 
  * Usage @include flex-reverse()
*/
@mixin flex-reverse() {
  -ms-flex-direction: row-reverse;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  flex-direction: row-reverse;
}

/** 
  * Usage @include flex-reverse-column()
*/
@mixin flex-reverse-column() {
  -ms-flex-direction: column-reverse;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  flex-direction: column-reverse;
}

@mixin clearfix {

  &:before,
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

// Covert px to em
@function em($px, $base: $default-font-size) {
  @return ($px / $base) * 1em;
}

// Covert px to rem
@mixin rem($sizeValue: 1.4) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

// Covert lineheight px to unitless
@function lh($line-height, $font-size) {
  @return get-value($line-height / $font-size);
}

/** CSS Transforms
* Usage: @include transform(translate3d(0,-50%,0))
*/
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}

/** CSS Transition
 *  Usage: @include transition(width,0.3s,ease-out);
 */
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}