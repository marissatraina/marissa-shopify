/*========================================================================
Mixins
========================================================================== */
//Breakpoints
//Default Mobile-portrait
$xsm: 31em; //496px
$sm: 36em; //576px
$md: 48em; //768px
$lg: 64em; //1024px //NEWGOLF-272
$xl: 80em; //1280px
$xxl: 90em; //1440px

$underMd: #{$md}-1px;

@mixin xsm {
  @media screen and (min-width: #{$xsm}) {
    @content;
  }
}

@mixin sm {
  @media screen and (min-width: #{$sm}) {
    @content;
  }
}

@mixin md {
  @media screen and (min-width: #{$md}) {
    @content;
  }
}

@mixin lg {
  @media screen and (min-width: #{$lg}) {
    @content;
  }
}

@mixin xl {
  @media screen and (min-width: #{$xl}) {
    @content;
  }
}

@mixin xxl {
  @media screen and (min-width: #{$xxl}) {
    @content;
  }
}

// alternative breakpoints
@mixin break($point, $type: 'min') {
  // for large desktop layouts
  @if $point==max {
    @media (#{$type}-width: $xxl + 1) {
      @content;
    }
  }

  // for desktop layouts
  @if $point==desktop {
    @media (#{$type}-width: $xl) {
      @content;
    }
  }

  // for small desktop / large tablet layouts
  @if $point==tabletLarge {
    @media (#{$type}-width: $lg) {
      @content;
    }
  }

  // tablet
  @if $point==tablet {
    @media (#{$type}-width: $md) {
      @content;
    }
  }

  // layouts < 768px
  @if $point==mobile {
    @media (#{$type}-width: $sm) {
      @content;
    }
  }
}

@mixin break-max($point) {
  // for large desktop layouts
  @if $point==max {
    @media (max-width: $xxl - 1) {
      @content;
    }
  }

  // for desktop layouts
  @if $point==desktop {
    @media (max-width: $xl) {
      @content;
    }
  }

  // for small desktop / large tablet layouts
  @if $point==tabletLarge {
    @media (max-width: $lg) {
      @content;
    }
  }

  // tablet
  @if $point==tablet {
    @media (max-width: $md) {
      @content;
    }
  }

  // layouts < 768px
  @if $point==mobile {
    @media (max-width: $md - 1) {
      @content;
    }
  }

  @if $point==mobilesm {
    @media (max-width: $sm) {
      @content;
    }
  }
}

// Covert px to em
@function em($px, $base: $default-font-size) {
  @return ($px / $base) * 1em;
}

// Covert px to rem
@function rem($px, $base: $default-font-size) {
  @return ($px / $base) * 1rem;
}

// Get raw value
@function get-value($n) {
  @return $n / ($n * 0 + 1);
}

// Covert lineheight px to unitless
@function lh($line-height, $font-size) {
  @return get-value($line-height / $font-size);
}

// aspect ratio for images
@mixin aspect($width, $height, $fit: contain) {
  position: relative;
  display: block; //@TODO: check all designs.

  &:before {
    display: block;
    content: '';
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .inner {
    position: absolute;
    object-fit: $fit;
    object-position: center;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    height: 100%;
    width: 100%;
    &-mobile-right {
      object-position: right;
    }

    &-mobile-left {
      object-position: left;
    }

    @include sm {
      &-right {
        object-position: right;
      }

      &-left {
        object-position: left;
      }
    }
  }
}

// ADA
@mixin focus($color: $white, $offset: 2px, $contrast: 'none') {
  // focus states for desktop
  &:focus {
    outline: 1px dotted $color;
    outline-offset: $offset;

    // extra contrast
    @if ($contrast == 'dark') {
      box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.2);
    } @else if ($contrast == 'light') {
      box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.2);
    }
  }
}

@mixin visually-hidden() {
  // sass-lint:disable no-important
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

@mixin visually-shown() {
  // sass-lint:disable no-important
  position: inherit !important;
  overflow: auto;
  clip: auto;
  width: auto;
  height: auto;
  margin: 0;
}

@mixin smoothing {
  font-variant-ligatures: common-ligatures;
  -moz-font-feature-settings: 'liga', 'clig';
  -webkit-font-feature-settings: 'liga', 'clig';
  font-feature-settings: 'liga' 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin gutter-padding {
  @media screen and (max-width: #{$sm - 1}) {
    padding-left: $gutterMobile;
    padding-right: $gutterMobile;
  }
  @media screen and (min-width: #{$sm}) {
    padding-left: $gutterDesktop;
    padding-right: $gutterDesktop;
  }
}
